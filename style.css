// =============================
// Zentrale Warenkorb-Logik
// =============================
let cart = [];

// =============================
// Cart laden beim Start
// =============================
function loadCart() {
  let stored = localStorage.getItem("cart");
  if (stored) cart = JSON.parse(stored);
  updateCart();
}
loadCart();

// =============================
// Produkt hinzufÃ¼gen
// =============================
function addToCart(name, price) {
  let existing = cart.find(item => item.name === name && item.price === price);
  if (existing) {
    existing.qty += 1;
  } else {
    cart.push({ name, price, qty: 1 });
  }
  saveCart();
}

// Kurs-Gutschein hinzufÃ¼gen
function addCourseVoucher() {
  let select = document.getElementById("kursTermine");
  if (!select) return;

  let selected = Array.from(select.selectedOptions).map(opt => opt.textContent);
  if (selected.length === 0) {
    alert("Bitte wÃ¤hle einen Termin aus!");
    return;
  }

  cart.push({
    name: "Kurs-Gutschein",
    price: 1.00,
    qty: 1,
    termine: selected
  });
  saveCart();
}

// Wert-Gutschein hinzufÃ¼gen
function addVoucher() {
  let amountInput = document.getElementById("voucherAmount");
  if (!amountInput) return;

  let amount = parseFloat(amountInput.value);
  if (amount < 10) amount = 10;
  cart.push({ name: "Wert-Gutschein", price: amount, qty: 1 });
  saveCart();
}

// =============================
// Menge Ã¤ndern
// =============================
function increaseQty(index) {
  cart[index].qty += 1;
  saveCart();
}

function decreaseQty(index) {
  cart[index].qty -= 1;
  if (cart[index].qty <= 0) cart.splice(index, 1);
  saveCart();
}

// =============================
// Warenkorb speichern & updaten
// =============================
function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
  updateCart();
}

function getCartTotal() {
  return cart.reduce((sum, item) => sum + (item.price * item.qty), 0);
}

// =============================
// Warenkorb anzeigen
// =============================
function updateCart() {
  // Header-Cart-ZÃ¤hler updaten
  let countEl = document.getElementById("cart-count");
  if (countEl) {
    countEl.innerText = cart.reduce((sum, item) => sum + item.qty, 0);
  }

  // Container suchen
  let container = document.getElementById("cart-container");
  if (!container) return;

  // Warenkorb-HTML bauen
  container.innerHTML = `
    <div id="cart" style="display:none; position:fixed; top:80px; right:20px; background:white; border:1px solid #ccc; padding:20px; max-width:340px; box-shadow:0 2px 10px rgba(0,0,0,0.2); z-index:9999;">
      <h3>Dein Warenkorb</h3>
      <ul id="cart-items" class="cart-list"></ul>
      <p><strong>Gesamt: <span id="cart-total">0.00</span> â‚¬</strong></p>
      <div id="paypal-button-container"></div>
      <button onclick="toggleCart()" class="btn">SchlieÃŸen</button>
    </div>

    <!-- Floating Button oben rechts -->
    <button id="cart-toggle" onclick="toggleCart()" style="position:fixed; top:20px; right:20px; background:#333; color:#fff; border:none; padding:10px 15px; border-radius:5px; cursor:pointer; z-index:10000;">
      ðŸ›’ <span id="cart-count">${cart.reduce((sum, item) => sum + item.qty, 0)}</span>
    </button>
  `;

  // Warenkorb-Liste fÃ¼llen
  let itemsList = container.querySelector("#cart-items");
  cart.forEach((item, i) => {
    let li = document.createElement("li");
    li.classList.add("cart-item");

    let span = document.createElement("span");
    span.innerText = `${item.name} â€“ ${item.price.toFixed(2)} â‚¬`;
    if (item.termine) {
      span.innerText += `\n(Termine: ${item.termine.join(", ")})`;
    }

    let controls = document.createElement("div");
    controls.classList.add("cart-controls");

    let minusBtn = document.createElement("button");
    minusBtn.innerText = "âž–";
    minusBtn.onclick = () => decreaseQty(i);

    let qtySpan = document.createElement("span");
    qtySpan.innerText = item.qty;
    qtySpan.classList.add("cart-qty");

    let plusBtn = document.createElement("button");
    plusBtn.innerText = "âž•";
    plusBtn.onclick = () => increaseQty(i);

    controls.appendChild(minusBtn);
    controls.appendChild(qtySpan);
    controls.appendChild(plusBtn);

    li.appendChild(span);
    li.appendChild(controls);
    itemsList.appendChild(li);
  });

  // Gesamtpreis setzen
  container.querySelector("#cart-total").innerText = getCartTotal().toFixed(2);

  // PayPal Buttons rendern
  if (typeof paypal !== "undefined") {
    paypal.Buttons({
      createOrder: function(data, actions) {
        return actions.order.create({
          purchase_units: [{
            description: cart.map(item => {
              let desc = `${item.name} x${item.qty}`;
              if (item.termine) {
                desc += ` [${item.termine.join(", ")}]`;
              }
              return desc;
            }).join("; "),
            amount: {
              currency_code: "EUR",
              value: getCartTotal().toFixed(2)
            }
          }]
        });
      },
      onApprove: function(data, actions) {
        return actions.order.capture().then(function(details) {
          alert("Vielen Dank, " + details.payer.name.given_name + "! Deine Bestellung war erfolgreich.");
          cart = [];
          saveCart();
          toggleCart();
        });
      }
    }).render('#paypal-button-container');
  }
}

// =============================
// Warenkorb auf/zu
// =============================
function toggleCart() {
  let cartDiv = document.getElementById("cart");
  if (!cartDiv) return;
  cartDiv.style.display = (cartDiv.style.display === "none") ? "block" : "none";
}
