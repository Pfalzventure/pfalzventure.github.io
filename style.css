<!DOCTYPE html>
<html lang="de">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Dein Shop</title>
<style>
/* ============================
   Farben vom Logo
   ============================ */
:root {
  --dark-green: #2f4f4f;
  --forest-green: #3b6e4d;
  --brown: #8b5a2b;
  --beige: #f5f5dc;
  --white: #fff;
  --hellgrÃ¼n: #28a745;
}

/* ============================
   Reset
   ============================ */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  background: var(--beige);
  color: var(--dark-green);
  line-height: 1.6;
}

/* ============================
   Header
   ============================ */
header {
  background: var(--dark-green);
  color: var(--white);
  padding: 0.5rem 0;
  position: sticky;
  top: 0;
  z-index: 1000;
}

header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  flex: 0;
}

.burger {
  flex: 1;
  text-align: center;
  font-size: 2rem;
  position: relative;
}

.cart-btn {
  flex: 0 !important;
  display: inline-block;
  width: auto;
}

.logo img {
  height: 70px;
}

nav ul {
  display: flex;
  list-style: none;
}

nav ul li {
  margin-left: 20px;
}

nav ul li a {
  text-decoration: none;
  color: var(--white);
  font-weight: bold;
  transition: color 0.3s;
}

nav ul li a:hover {
  color: var(--brown);
}

/* ============================
   Navigation & Burger MenÃ¼
   ============================ */
.burger {
  display: none;
  flex-direction: column;
  gap: 5px;
  cursor: pointer;
  user-select: none;
}

.burger div {
  width: 35px;
  height: 3px;
  background: var(--white);
  transition: all 0.3s;
}

/* ============================
   Responsive Navigation
   ============================ */
@media (max-width: 600px) {
  nav ul {
    display: none;
    flex-direction: column;
    background: #f5f5dc;
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    min-width: 180px;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    padding: 10px;
    z-index: 999;
  }

  nav ul.nav-active {
    display: flex;
  }

  nav ul li {
    margin: 10px 0;
    text-align: center;
  }

  nav ul li a {
    color: var(--dark-green);
  }

  .burger {
    display: flex;
    font-size: 3rem;
    cursor: pointer;
    user-select: none;
    position: relative;
  }
}

/* ============================
   Hero Section
   ============================ */
.hero {
  background: url("assets/wald.png") no-repeat center center/cover;
  color: var(--white);
  text-align: center;
  height: 90vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.hero::after {
  content: "";
  position: absolute;
  top: 0; 
  left: 0;
  width: 100%; 
  height: 100%;
  background: rgba(47, 79, 79, 0.6);
}

.hero-content {
  position: relative;
  z-index: 1;
}

.hero h1 {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.hero p {
  font-size: 1.2rem;
  margin-bottom: 2rem;
}

.hero-logo {
  max-width: 300px;
  margin-bottom: 1.5rem;
  filter: drop-shadow(0 0 10px rgba(0,0,0,0.7));
}

/* ============================
   Allgemeine Buttons
   ============================ */
.btn {
  background: var(--forest-green);
  color: var(--white);
  padding: 10px 20px;
  border-radius: 5px;
  text-decoration: none;
  transition: background 0.3s;
  cursor: pointer;
  border: none;
}

.btn:hover {
  background: #28a745;
}

.cart-btn {
  background-color: orange;
  color: white;
  border: none;
  padding: 10px 16px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
}

.cart-btn:hover {
  background-color: darkorange;
}

.add-btn {
  background-color: #3b6e4d;
  color: white;
  border: none;
  padding: 8px 14px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
  margin-top: 8px;
}

.add-btn:hover {
  background-color: #28a745;
}

/* ============================
   Warenkorb-Animation
   ============================ */
@keyframes cart-bounce {
  0%   { transform: scale(1); }
  30%  { transform: scale(1.2); }
  60%  { transform: scale(0.9); }
  100% { transform: scale(1); }
}

.cart-btn.added {
  animation: cart-bounce 0.4s ease;
}

/* ============================
   Footer
   ============================ */
footer {
  background: var(--dark-green);
  color: var(--white);
  text-align: center;
  padding: 20px 10px;
  margin-top: 40px;
}

footer a {
  color: var(--white);
  text-decoration: underline;
}

/* ============================
   Weitere Styles wie Kontakt, Shop, etc.
   ============================ */

/* ... (hier bleibt dein restlicher CSS-Code unverÃ¤ndert) ... */
</style>
</head>
<body>

<header>
  <div class="container">
    <div class="logo"><img src="assets/logo.png" alt="Logo"></div>
    <div class="burger" onclick="document.querySelector('nav ul').classList.toggle('nav-active')">
      <div></div>
      <div></div>
      <div></div>
    </div>
    <button class="cart-btn" onclick="toggleCart()">ðŸ›’ <span id="cart-count">0</span></button>
  </div>
</header>

<nav>
  <ul>
    <li><a href="#">Startseite</a></li>
    <li><a href="#">Shop</a></li>
    <li><a href="#">Kontakt</a></li>
  </ul>
</nav>

<!-- Beispiel Shop Produkte -->
<section class="shop-section">
  <h1>Produkte</h1>
  <div class="product">
    <h2>Produkt 1</h2>
    <p>Beschreibung Produkt 1</p>
    <button class="add-btn" onclick="addToCart('Produkt 1', 19.99)">In den Warenkorb</button>
  </div>
  <div class="product">
    <h2>Produkt 2</h2>
    <p>Beschreibung Produkt 2</p>
    <button class="add-btn" onclick="addToCart('Produkt 2', 29.99)">In den Warenkorb</button>
  </div>
</section>

<!-- Warenkorb -->
<div id="cart" style="display:none;">
  <ul id="cart-items" class="cart-list"></ul>
  <div>Gesamt: <span id="cart-total">0.00</span> â‚¬</div>
  <div id="paypal-button-container"></div>
</div>

<script src="https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID&currency=EUR"></script>
<script>
let cart = [];
const cartBtn = document.querySelector(".cart-btn");

function addToCart(name, price) {
  let existing = cart.find(item => item.name === name && item.price === price);
  if (existing) { existing.qty += 1; } else { cart.push({ name, price, qty: 1 }); }
  saveCart();
  cartBtn.classList.remove("added");
  void cartBtn.offsetWidth;
  cartBtn.classList.add("added");
}

function increaseQty(i) { cart[i].qty += 1; saveCart(); }
function decreaseQty(i) { cart[i].qty -= 1; if(cart[i].qty<=0) cart.splice(i,1); saveCart(); }
function getCartTotal() { return cart.reduce((sum, item) => sum + item.price*item.qty,0); }

function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
  updateCart();
}

function loadCart() {
  let stored = localStorage.getItem("cart");
  if(stored) cart = JSON.parse(stored);
  updateCart();
}

function updateCart() {
  document.getElementById("cart-count").innerText = cart.reduce((sum,item)=>sum+item.qty,0);
  let itemsList = document.getElementById("cart-items");
  itemsList.innerHTML = "";
  cart.forEach((item,i)=>{
    let li = document.createElement("li"); li.classList.add("cart-item");
    let span = document.createElement("span"); span.innerText = `${item.name} â€“ ${item.price.toFixed(2)} â‚¬`;
    let controls = document.createElement("div"); controls.classList.add("cart-controls");
    let minus = document.createElement("button"); minus.innerText="âž–"; minus.onclick=()=>decreaseQty(i);
    let qty = document.createElement("span"); qty.innerText=item.qty; qty.classList.add("cart-qty");
    let plus = document.createElement("button"); plus.innerText="âž•"; plus.onclick=()=>increaseQty(i);
    controls.append(minus, qty, plus); li.append(span, controls); itemsList.appendChild(li);
  });
  document.getElementById("cart-total").innerText = getCartTotal().toFixed(2);
}

function toggleCart() {
  let cartDiv = document.getElementById("cart");
  cartDiv.style.display = cartDiv.style.display==="none"?"block":"none";
}

paypal.Buttons({
  createOrder: (data, actions) => {
    return actions.order.create({
      purchase_units: [{
        description: cart.map(item => `${item.name} x${item.qty}`).join("; "),
        amount: { currency_code:"EUR", value:getCartTotal().toFixed(2) }
      }]
    });
  },
  onApprove: (data, actions) => actions.order.capture().then(details=>{
    alert("Vielen Dank! Bestellung erfolgreich abgeschlossen.");
    cart = []; saveCart(); toggleCart();
  })
}).render('#paypal-button-container');

loadCart();
</script>
</body>
</html>
